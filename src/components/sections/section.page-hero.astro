---
import ControlNavbarDesktop from '../controls/control.navbar.desktop.astro';
import ControlNavbarMobile from '../controls/control.navbar.mobile.astro';
import ControlStickyHeaderMobile from '../controls/control.sticky-header.mobile.astro';
import { useTranslations, getLangFromUrl } from '../../lib/utils';

interface Props {
  backgroundImage: string;
  title: string;
  description: string;
  locale?: string;
}

const { backgroundImage, title, description } = Astro.props;
const lang = Astro.props.locale || getLangFromUrl(Astro.url);
---

<section class="page-hero-section parallax-hero">
  <!-- Parallax Background Layer -->
  <div class="parallax-background" style={`background-image: linear-gradient(rgba(50, 62, 72, 0.6), rgba(50, 62, 72, 0.6)), url(${backgroundImage})`}></div>
  
  <!-- Parallax Content Layer -->
  <div class="parallax-content">
    <!-- Navigation Bar -->
    <ControlNavbarDesktop locale={lang} />
    <ControlNavbarMobile locale={lang} />
    
    <!-- Sticky Mobile Header -->
    <ControlStickyHeaderMobile locale={lang} />
    
    <!-- Hero Content -->
    <div class="page-hero-content">
        <h1 class="page-title color-white" set:html={title}></h1>
        <p class="page-description color-white" set:html={description}></p>
    </div>
  </div>
</section>

<script>
  // Import and initialize parallax controller
  import '../../scripts/parallax.ts';
</script>

<style>
  .page-hero-section {
    position: relative;
    display: flex;
    flex-direction: column;
    align-items: center;
    color: var(--color-light);
    padding: 2.25rem 9rem 9rem 9rem;
    gap: 9rem;
    height: 36.9375rem; /* 591px from Figma */
    /* Remove background styles - now handled by parallax-background */
  }

  /* Parallax content maintains flex layout */
  .parallax-content {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 9rem;
    width: 100%;
    height: 100%;
  }

  /* Hero Content */
  .page-hero-content {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: flex-start;
    width: 100%;
    margin: 0 auto;
    gap: 2.5rem;
    text-align: left;
  }

  .page-title {
    font-family: 'Playfair Display', serif;
    font-weight: 400;
    font-size: 5.3125rem; /* 85px from Figma */
    line-height: 1;
    color: var(--color-light);
    margin: 0;
    text-align: left;
  }

  .page-description {
    font-family: 'Source Sans Pro', sans-serif;
    font-weight: 400;
    font-size: 0.875rem; /* 14px from Figma */
    line-height: 1.257;
    color: var(--color-light);
    margin: 0;
    text-align: left;
    max-width: 27.25rem; /* 436px from Figma */
  }

  /* Media queries */
  @media (min-width: 1024px) {
    .page-hero-section {
      padding: 2.25rem 9rem 9rem 9rem;
    }
  } 

  @media (min-width: 768px) and (max-width: 1024px) {
    .page-hero-section {
      padding: 1.5rem 3rem;
      height: 30rem;
    }
    
    .page-title {
      font-size: 4rem;
    }
  }

  @media (max-width: 768px) {
    .page-hero-section {
      padding: 0.75rem 1.5rem 1.5rem 1.5rem;
      height: 25rem;
      gap: 4rem;
    }
    
    .page-title {
      font-size: 3rem;
      text-align: center;
    }
    
    .page-description {
      text-align: center;
    }
  }
</style>
