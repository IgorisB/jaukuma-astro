---
import { useTranslations } from '../../lib/utils';
import { languages, SOCIAL_MEDIA, CONTACT, PAGES } from '../../lib/constants';
import { getLangFromUrl, getLocalePath } from '../../lib/utils';
const lang = Astro.props.locale 
const t = useTranslations(lang);
const currentLang = getLangFromUrl(Astro.url);
---

<nav class="nav-bar-mobile visible-md">
    <div class="nav-container-mobile">
        <!-- Hamburger Menu Icon -->
        <button class="menu-toggle" aria-label="Toggle menu" id="menuToggle">
            <div class="hamburger">
                <span class="hamburger-line"></span>
                <span class="hamburger-line"></span>
                <span class="hamburger-line"></span>
            </div>
        </button>

        <!-- Logo -->
        <a href={getLocalePath(lang, '/')} class="logo-mobile">
            <img src="/images/jaukuma-logo-mobile.svg" alt="Jaukuma" class="logo-image-mobile" />
        </a>

        <!-- Phone Icon -->
        <a href={`tel:${CONTACT.PHONE}`} class="phone-link" aria-label="Call us">
            <img src="/images/phone-icon.svg" alt="Phone" class="phone-icon" />
        </a>
    </div>

    <!-- Mobile Menu Overlay -->
    <div class="mobile-menu-overlay" id="mobileMenuOverlay">
        <div class="mobile-menu-content">
            <!-- Menu Header -->
            <div class="menu-header">
                <button class="menu-close" aria-label="Close menu" id="menuClose">
                    <svg width="18" height="18" viewBox="0 0 18 18" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M1 1L17 17M17 1L1 17" stroke="#D7D2C5" stroke-width="2" stroke-linecap="round"/>
                    </svg>
                </button>
                
                <!-- Language Switcher -->
                <div class="language-switcher">
                    {languages.map((code) => (
                        <a 
                            href={getLocalePath(code, Astro.url.pathname)} 
                            class={`lang-link ${currentLang === code ? 'active' : ''}`}
                            aria-current={currentLang === code ? 'page' : undefined}
                        >
                            {code.toUpperCase()}
                        </a>
                    ))}
                </div>
            </div>

            <!-- Menu Items -->
            <div class="menu-items">
                <!-- Expandable Services Menu -->
                <div class="menu-item expandable" id="servicesMenuItem">
                    <button class="menu-item-button" id="servicesToggle">
                        <span class="menu-item-text">{t('nav.services')}</span>
                        <svg class="expand-icon" width="16" height="8" viewBox="0 0 16 8" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M1 1L8 7L15 1" stroke="currentColor" stroke-width="1.33" stroke-linecap="round" stroke-linejoin="round"/>
                        </svg>
                    </button>
                    
                    <!-- Services Submenu -->
                    <div class="submenu" id="servicesSubmenu">
                        <div class="submenu-item">
                            <a href={getLocalePath(lang, PAGES.SERVICES.BOUQUETS)} class="submenu-link">{t('nav.services.bouquets')}</a>
                            <div class="submenu-divider"></div>
                        </div>
                        <div class="submenu-item">
                            <a href={getLocalePath(lang, PAGES.SERVICES.DECORATION)} class="submenu-link">{t('nav.services.decoration')}</a>
                            <div class="submenu-divider"></div>
                        </div>
                        <div class="submenu-item">
                            <a href={getLocalePath(lang, PAGES.SERVICES.PLANTS)} class="submenu-link">{t('nav.services.plants')}</a>
                            <div class="submenu-divider"></div>
                        </div>
                        <div class="submenu-item">
                            <a href={getLocalePath(lang, PAGES.SERVICES.EVENTS)} class="submenu-link">{t('nav.services.events')}</a>
                            <div class="submenu-divider"></div>
                        </div>
                        <div class="submenu-item">
                            <a href={getLocalePath(lang, PAGES.SERVICES.SUBSCRIPTION)} class="submenu-link">{t('nav.services.subscription')}</a>
                        </div>
                    </div>
                </div>

                <!-- Regular Menu Items -->
                <a href={getLocalePath(lang, PAGES.ABOUT)} class="menu-item-link">{t('nav.about')}</a>
                <a href={getLocalePath(lang, PAGES.CONTACT)} class="menu-item-link">{t('nav.contact')}</a>
            </div>

            <!-- Menu Footer -->
            <div class="menu-footer">
                <!-- Social Icons -->
                <div class="social-icons">
                    <a href={SOCIAL_MEDIA.INSTAGRAM} class="social-icon" aria-label="Instagram" target="_blank" rel="noopener noreferrer">
                        <img src="/images/instagram-icon.svg" alt="Instagram" class="social-icon-image" />
                    </a>
                    <a href={SOCIAL_MEDIA.FACEBOOK} class="social-icon" aria-label="Facebook" target="_blank" rel="noopener noreferrer">
                        <img src="/images/facebook-icon.svg" alt="Facebook" class="social-icon-image" />
                    </a>
                </div>

                <!-- Logo -->
                <div class="menu-logo">
                    <img src="/images/jaukuma-logo-rect.svg" alt="Jaukuma" class="menu-logo-image" />
                </div>
            </div>
        </div>
    </div>
</nav>

<style>
    .nav-bar-mobile {
        width: 100%;
        background: transparent;
        position: relative;
    }

    .nav-container-mobile {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 1.5rem 0;
        gap: 3.5625rem; /* 57px */
    }

    /* Hamburger Menu */
    .menu-toggle {
        background: none;
        border: none;
        padding: 0;
        cursor: pointer;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        width: 1.5625rem; /* 25px */
        height: auto;
    }

    .hamburger {
        display: flex;
        flex-direction: column;
        gap: 0.3125rem; /* 5px */
        width: 100%;
    }

    .hamburger-line {
        width: 100%;
        height: 0.1875rem; /* 3px */
        background-color: #F3F1F1;
        border-radius: 1px;
        transition: all 0.3s ease;
    }

    .menu-toggle:hover .hamburger-line {
        background-color: #D6D2C4;
    }

    /* Logo */
    .logo-mobile {
        flex: 1;
        display: flex;
        justify-content: center;
        align-items: center;
        text-decoration: none;
    }

    .logo-image-mobile {
        height: 3.326875rem; /* 53.23px */
        width: auto;
        object-fit: contain;
    }

    /* Phone Icon */
    .phone-link {
        display: flex;
        justify-content: center;
        align-items: center;
        padding: 0.125rem; /* 2px */
        text-decoration: none;
        transition: opacity 0.3s ease;
    }

    .phone-link:hover {
        opacity: 0.8;
    }

    .phone-icon {
        width: 1.243125rem; /* 19.89px */
        height: 1.245625rem; /* 19.93px */
        filter: brightness(0) invert(1); /* Make icon white */
    }

    /* Mobile Menu Overlay */
    .mobile-menu-overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100vh; /* Fallback */
        height: 100dvh; /* Dynamic viewport height for mobile */
        height: calc(var(--vh, 1vh) * 100); /* JavaScript-calculated viewport height */
        background-color: #323E48;
        z-index: 1000;
        opacity: 0;
        visibility: hidden;
        transition: all 0.3s ease;
        display: flex;
        flex-direction: column;
    }

    .mobile-menu-overlay.active {
        opacity: 1;
        visibility: visible;
    }

    .mobile-menu-content {
        display: flex;
        flex-direction: column;
        height: 100%;
        padding: 1rem 1.5rem;
        gap: 0.5rem;
    }

    /* Menu Header */
    .menu-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 0;
        gap: 0.5rem;
    }

    .menu-close {
        background: none;
        border: none;
        padding: 0;
        cursor: pointer;
        width: 2.1875rem; /* 35px */
        height: 2.1875rem; /* 35px */
        display: flex;
        align-items: center;
        justify-content: center;
        transition: opacity 0.3s ease;
    }

    .menu-close:hover {
        opacity: 0.8;
    }

    .language-switcher {
        display: flex;
        gap: 1rem;
        justify-content: flex-end;
    }

    .lang-link {
        font-family: 'Playfair Display', serif;
        font-weight: 400;
        font-size: 1.5rem; /* 24px */
        line-height: 1.333;
        text-transform: uppercase;
        color: #FFFFFF;
        text-decoration: none;
        transition: color 0.3s ease;
    }

    .lang-link.active {
        color: #D7D2C5;
    }

    .lang-link:hover {
        color: #D7D2C5;
    }

    /* Menu Items */
    .menu-items {
        display: flex;
        flex-direction: column;
        gap: 1.5rem; /* 24px */
        padding: 1.5rem 0;
        flex: 1;
    }

    .menu-item.expandable {
        display: flex;
        flex-direction: column;
    }

    .menu-item-button {
        display: flex;
        align-items: center;
        justify-content: flex-start;
        background: none;
        border: none;
        padding: 0;
        cursor: pointer;
        width: 100%;
        gap: 0.625rem; /* 10px */
    }

    .menu-item-text {
        font-family: 'Playfair Display', serif;
        font-weight: 400;
        font-size: 1.5rem; /* 24px */
        line-height: 1.333;
        text-transform: uppercase;
        color: #FFFFFF;
        text-align: left;
    }

    .expand-icon {
        transition: transform 0.3s ease;
        color: #FFFFFF;
    }

    .menu-item.expanded .expand-icon {
        transform: rotate(180deg);
    }

    .menu-item.expanded .menu-item-text {
        color: #D7D2C5;
    }

    /* Submenu */
    .submenu {
        display: none;
        flex-direction: column;
        gap: 1.25rem; /* 20px */
        padding: 1.25rem 0 0 0.75rem; /* 12px left padding */
        margin-top: 0.75rem; /* 12px */
    }

    .submenu.active {
        display: flex;
    }

    .submenu-item {
        display: flex;
        flex-direction: column;
        gap: 0.75rem; /* 12px */
    }

    .submenu-link {
        font-family: 'Playfair Display', serif;
        font-weight: 400;
        font-size: 1rem; /* 16px */
        line-height: 1.333;
        text-transform: uppercase;
        color: #FFFFFF;
        text-decoration: none;
        transition: color 0.3s ease;
    }

    .submenu-link:hover {
        color: #D7D2C5;
    }

    .submenu-divider {
        height: 0;
        border-top: 1px solid rgba(255, 255, 255, 0.1);
        width: 100%;
    }

    .menu-item-link {
        font-family: 'Playfair Display', serif;
        font-weight: 400;
        font-size: 1.5rem; /* 24px */
        line-height: 1.333;
        text-transform: uppercase;
        color: #FFFFFF;
        text-decoration: none;
        transition: color 0.3s ease;
    }

    .menu-item-link:hover {
        color: #D7D2C5;
    }

    /* Menu Footer */
    .menu-footer {
        display: flex;
        justify-content: space-between;
        align-items: center;
        gap: 6rem; /* 93px */
        padding: 0;
    }

    .social-icons {
        display: flex;
        gap: 0;
        width: 4.375rem; /* 70px */
        height: 2.1875rem; /* 35px */
    }

    .social-icon {
        display: flex;
        align-items: center;
        justify-content: center;
        text-decoration: none;
        transition: opacity 0.3s ease;
    }

    .social-icon:hover {
        opacity: 0.8;
    }

    .social-icon-image {
        width: 2.1875rem; /* 35px */
        height: 2.1875rem; /* 35px */
        object-fit: contain;
    }

    .menu-logo {
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .menu-logo-image {
        width: 8.3275rem; /* 133.24px */
        height: 3.326875rem; /* 53.23px */
        object-fit: contain;
    }

    /* Responsive adjustments */
    @media (max-width: 640px) {
        .nav-container-mobile {
            padding: 1rem 0;
            gap: 2rem;
        }

        .logo-image-mobile {
            height: 2.5rem;
        }

        .hamburger-line {
            height: 0.125rem; /* 2px */
        }

        .mobile-menu-content {
            padding: 1rem;
        }

        .menu-items {
            gap: 1rem;
            padding: 1rem 0;
        }

        .menu-footer {
            gap: 3rem;
        }

        .menu-logo-image {
            width: 6rem;
            height: 2.5rem;
        }
    }

    /* Mobile-specific fixes */
    @supports (-webkit-touch-callout: none) {
        /* iOS Safari specific fixes */
        .mobile-menu-overlay {
            height: -webkit-fill-available;
        }
    }

    /* Handle mobile browser address bar issues */
    @media screen and (max-height: 600px) {
        .mobile-menu-content {
            padding: 0.5rem 1rem;
        }
        
        .menu-items {
            gap: 0.75rem;
            padding: 0.75rem 0;
        }
        
        .menu-item-text,
        .menu-item-link {
            font-size: 1.25rem;
        }
    }
</style>

<script>
    // Mobile menu functionality
    document.addEventListener('DOMContentLoaded', function() {
        const menuToggle = document.getElementById('menuToggle');
        const menuClose = document.getElementById('menuClose');
        const mobileMenuOverlay = document.getElementById('mobileMenuOverlay');
        const servicesToggle = document.getElementById('servicesToggle');
        const servicesMenuItem = document.getElementById('servicesMenuItem');
        const servicesSubmenu = document.getElementById('servicesSubmenu');

        // Set CSS custom property for viewport height
        function setViewportHeight() {
            const vh = window.innerHeight * 0.01;
            document.documentElement.style.setProperty('--vh', `${vh}px`);
        }

        // Initialize viewport height
        setViewportHeight();

        // Update viewport height on resize and orientation change
        window.addEventListener('resize', setViewportHeight);
        window.addEventListener('orientationchange', function() {
            // Delay to ensure orientation change is complete
            setTimeout(setViewportHeight, 100);
        });

        // Toggle mobile menu
        function toggleMobileMenu() {
            if (mobileMenuOverlay) {
                const isOpening = !mobileMenuOverlay.classList.contains('active');
                
                if (isOpening) {
                    // Store current scroll position before opening menu
                    const scrollY = window.scrollY;
                    document.body.dataset.scrollY = scrollY.toString();
                    
                    // Open menu and prevent body scroll
                    mobileMenuOverlay.classList.add('active');
                    document.body.style.overflow = 'hidden';
                    document.body.style.position = 'fixed';
                    document.body.style.top = `-${scrollY}px`;
                    document.body.style.width = '100%';
                } else {
                    // Close menu and restore scroll position
                    const scrollY = document.body.dataset.scrollY;
                    
                    mobileMenuOverlay.classList.remove('active');
                    document.body.style.overflow = '';
                    document.body.style.position = '';
                    document.body.style.top = '';
                    document.body.style.width = '';
                    
                    // Restore scroll position without triggering scroll events
                    if (scrollY) {
                        requestAnimationFrame(() => {
                            window.scrollTo(0, parseInt(scrollY));
                            delete document.body.dataset.scrollY;
                        });
                    }
                }
            }
        }

        // Toggle services submenu
        function toggleServicesSubmenu() {
            if (servicesMenuItem && servicesSubmenu) {
                servicesMenuItem.classList.toggle('expanded');
                servicesSubmenu.classList.toggle('active');
            }
        }

        // Event listeners
        menuToggle?.addEventListener('click', toggleMobileMenu);
        menuClose?.addEventListener('click', toggleMobileMenu);
        servicesToggle?.addEventListener('click', toggleServicesSubmenu);

        // Close menu when clicking outside
        mobileMenuOverlay?.addEventListener('click', function(e) {
            if (e.target === mobileMenuOverlay) {
                toggleMobileMenu();
            }
        });

        // Close menu on escape key
        document.addEventListener('keydown', function(e) {
            if (e.key === 'Escape' && mobileMenuOverlay?.classList.contains('active')) {
                toggleMobileMenu();
            }
        });

        // Handle mobile browser back button
        window.addEventListener('popstate', function() {
            if (mobileMenuOverlay?.classList.contains('active')) {
                toggleMobileMenu();
            }
        });
    });
</script> 